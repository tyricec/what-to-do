{"version":3,"sources":["components/Footer.js","components/Header.js","components/TodoInput.js","containers/AddTodo.js","todo/actions.js","todo/actionTypes.js","todo/reducer.js","components/Todo/EditPanel.js","components/Todo/Todo.js","components/Todo/index.js","containers/TodoList.js","pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Signature","styled","footer","_templateObject","SignatureText","span","_templateObject2","Footer","react_default","a","createElement","HeaderContainer","header","Header_templateObject","Title","h1","Header_templateObject2","Header","Container","form","TodoInput_templateObject","Input","input","TodoInput_templateObject2","Button","button","_templateObject3","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","evt","setState","value","target","onFocus","select","onSubmit","preventDefault","state","textInput","focus","_this2","_this$props","buttonText","className","placeholder","innerRef","React","Component","defaultProps","AddTodo","dispatch","components_TodoInput","todo","payload","type","addTodo","connect","initialState","todos","byId","idCounter","lists","0","id","name","app","currentList","getTodos","values","arguments","length","undefined","action","objectSpread","defineProperty","list","index","checked","isInEditMode","_state$todos$byId","stateWithItemRemoved","objectWithoutProperties","map","_toPropertyKey","update","Panel","div","EditPanel_templateObject","EditButton","EditPanel_templateObject2","EditPanel","_ref","onCheck","onEdit","onRemove","onClick","aria-hidden","ListItem","li","Todo_templateObject","Text","Todo_templateObject2","_ref2","Todo","_ref3","children","Todo_EditPanel","List","ul","TodoList_templateObject","TodoList","idx","updateTodo","components_Todo","key","Screen","Home_templateObject","Home_templateObject2","StyledAddTodo","Home_templateObject3","Home","components_Header","Home_Container","containers_TodoList","components_Footer","App","migrations","1","forEach","t","config","storage","version","migrate","createMigrate","debug","reducer","persistReducer","store","createStore","persistor","persistStore","integration_react","react_redux_es","pages_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1905ed5e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Signature = styled.footer`\n  background-color: #039373;\n  color: #FFFFFF;\n  font-size: 1.1em;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n`;\n\nconst SignatureText = styled.span`\n  display: inline-block;\n  margin: 8px 16px;\n`;\n\nconst Footer = () => (\n  <Signature>\n    <SignatureText>App created by: Tyrice C.</SignatureText>\n  </Signature>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.header`\n  background-color: #45ac4f;\n  overflow: auto;\n`;\n\nconst Title = styled.h1`\n  color: #ffffff;\n  font-size: 1.6em;\n  margin-left: 16px;\n`;\n\nconst Header = () => (\n  <HeaderContainer>\n    <Title>What Todo</Title>\n  </HeaderContainer>\n);\n\nexport default Header;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.form`\n  display: flex;\n  background-color: #ffffff;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Input = styled.input`\n  border: none;\n  margin: 8px 16px;\n  width: 75%;\n\n  &:focus {\n    border-bottom: 1px solid #398c3a;\n    outline: none;\n    outline-style: none;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: #398c3a;\n  border: none;\n  color: #ffffff;\n  margin: 8px;\n  padding: 8px;\n`;\n\nclass TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value\n    };\n  }\n\n  componentDidMount() {\n    this.textInput.focus();\n  }\n\n  onChange = evt => {\n    this.setState({ value: evt.target.value });\n  };\n\n  onFocus = evt => {\n    evt.target.select();\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state.value);\n\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    const { buttonText, className, placeholder } = this.props;\n    return (\n      <Container className={className} onSubmit={this.onSubmit}>\n        <Input\n          onChange={this.onChange}\n          onFocus={this.onFocus}\n          placeholder={placeholder}\n          innerRef={input => (this.textInput = input)}\n          value={this.state.value}\n        />\n        <Button>{buttonText}</Button>\n      </Container>\n    );\n  }\n}\n\nTodoInput.propTypes = {\n  buttonText: PropTypes.string,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string\n};\n\nTodoInput.defaultProps = {\n  buttonText: \"Save\",\n  className: \"\",\n  placeholder: \"Enter what todo\",\n  value: \"\"\n};\n\nexport default TodoInput;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addTodo } from \"../todo/actions\";\n\nimport TodoInput from \"../components/TodoInput\";\n\nconst AddTodo = props => {\n  const { className, dispatch } = props;\n  return (\n    <TodoInput\n      buttonText=\"Add\"\n      className={className}\n      onSubmit={todo => dispatch(addTodo(todo))}\n    />\n  );\n};\n\nAddTodo.propTypes = {\n  className: PropTypes.string,\n  dispatch: PropTypes.func.isRequired\n};\n\nAddTodo.defaultProps = {\n  className: \"\"\n};\n\nexport default connect()(AddTodo);\n","import {\n  ADD_TODO,\n  EDIT_TODO,\n  REMOVE_TODO,\n  UPDATE_TODO,\n  CHECK_TODO\n} from \"./actionTypes\";\n\nexport const addTodo = todo => ({\n  payload: {\n    todo\n  },\n  type: ADD_TODO\n});\n\nexport const checkTodo = index => ({\n  payload: {\n    index\n  },\n  type: CHECK_TODO\n});\n\nexport const editTodo = index => ({\n  payload: {\n    index\n  },\n  type: EDIT_TODO\n});\n\nexport const updateTodo = (update, index) => ({\n  payload: {\n    update,\n    index\n  },\n  type: UPDATE_TODO\n});\n\nexport const removeTodo = index => ({\n  payload: {\n    index\n  },\n  type: REMOVE_TODO\n});\n","export const ADD_TODO = \"ADD_TODO\";\nexport const CHECK_TODO = \"CHECK_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nexport default {\n  ADD_TODO,\n  CHECK_TODO,\n  EDIT_TODO,\n  REMOVE_TODO,\n  UPDATE_TODO\n};\n","import {\n  ADD_TODO,\n  REMOVE_TODO,\n  UPDATE_TODO,\n  EDIT_TODO,\n  CHECK_TODO\n} from \"./actionTypes\";\n\nconst initialState = {\n  todos: {\n    byId: {},\n    idCounter: 0\n  },\n  lists: {\n    byId: {\n      0: {\n        id: 0,\n        name: \"What Todo\"\n      }\n    }\n  },\n  app: {\n    currentList: 0\n  }\n};\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          byId: {\n            ...state.todos.byId,\n            [state.todos.idCounter]: {\n              id: state.todos.idCounter,\n              list: 0,\n              value: action.payload.todo\n            }\n          },\n          idCounter: state.todos.idCounter + 1\n        }\n      };\n    }\n    case CHECK_TODO: {\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          byId: {\n            ...state.todos.byId,\n            [action.payload.index]: {\n              ...state.todos.byId[action.payload.index],\n              checked: !state.todos.byId[action.payload.index].checked\n            }\n          }\n        }\n      };\n    }\n    case EDIT_TODO: {\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          byId: {\n            ...state.todos.byId,\n            [action.payload.index]: {\n              ...state.todos.byId[action.payload.index],\n              isInEditMode: true\n            }\n          }\n        }\n      };\n    }\n    case REMOVE_TODO: {\n      const {\n        [action.payload.index]: removed,\n        ...stateWithItemRemoved\n      } = state.todos.byId;\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          byId: {\n            ...stateWithItemRemoved\n          }\n        }\n      };\n    }\n    case UPDATE_TODO: {\n      return {\n        ...state,\n        todos: {\n          ...state.todos,\n          byId: {\n            ...state.todos.byId,\n            [action.payload.index]: {\n              ...state.todos.byId[action.payload.index],\n              value: action.payload.update,\n              isInEditMode: false\n            }\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const getTodos = state => Object.values(state.todos.byId);\nexport const getListToDisplay = state => {\n  const listId = state.app.currentList;\n\n  return state.lists.byId[listId];\n};\n\nexport default todos;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Panel = styled.div`\n  background-color: #ffffff;\n  margin: 8px 0;\n`;\n\nconst EditButton = styled.button`\n  background-color: #ffffff;\n  cursor: pointer;\n  padding: 4px;\n  margin: 0 8px;\n  border: none;\n`;\n\nconst EditPanel = ({ className, onCheck, onEdit, onRemove }) => (\n  <Panel className={className}>\n    <EditButton onClick={onCheck}>\n      <i className=\"fa fa-check\" aria-hidden=\"true\" />\n    </EditButton>\n    <EditButton onClick={onEdit}>\n      <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n    </EditButton>\n    <EditButton onClick={onRemove}>\n      <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n    </EditButton>\n  </Panel>\n);\n\nEditPanel.propTypes = {\n  className: PropTypes.string,\n  onEdit: PropTypes.func,\n  onRemove: PropTypes.func\n};\n\nEditPanel.defaultProps = {\n  className: \"\",\n  onEdit: () => {},\n  onRemove: () => {}\n};\n\nexport default EditPanel;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport EditPanel from \"./EditPanel\";\n\nconst ListItem = styled.li`\n  border-bottom: 1px solid #ececec;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Text = styled.div`\n  padding: 8px;\n  text-decoration: ${({ checked }) => (checked ? \"line-through\" : \"none\")};\n  color: ${({ checked }) => (checked && \"#398c3a\") || \"#000000\"};\n`;\n\nconst Todo = ({ checked, children, onCheck, onEdit, onRemove }) => (\n  <ListItem>\n    <Text checked={checked}>{children}</Text>\n    <EditPanel onCheck={onCheck} onEdit={onEdit} onRemove={onRemove} />\n  </ListItem>\n);\n\nTodo.propTypes = {\n  children: PropTypes.node.isRequired,\n  onCheck: PropTypes.func,\n  onEdit: PropTypes.func,\n  onRemove: PropTypes.func\n};\n\nTodo.defaultProps = {\n  onCheck: () => {},\n  onEdit: () => {},\n  onRemove: () => {}\n};\n\nexport default Todo;\n","import Todo from \"./Todo\";\nimport EditPanel from \"./EditPanel\";\n\nexport { EditPanel };\nexport default Todo;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { editTodo, removeTodo, updateTodo, checkTodo } from \"../todo/actions\";\nimport { getTodos } from \"../todo/reducer\";\nimport styled from \"styled-components\";\n\nimport Todo from \"../components/Todo\";\nimport TodoInput from \"../components/TodoInput\";\n\nconst List = styled.ul`\n  background-color: #ffffff;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst TodoList = ({ dispatch, todos }) => (\n  <List>\n    {todos &&\n      todos.map((todo, idx) => {\n        if (todo.isInEditMode) {\n          return (\n            <TodoInput\n              onSubmit={update => dispatch(updateTodo(update, todo.id))}\n              value={todo.value}\n            />\n          );\n        }\n        return (\n          <Todo\n            key={idx}\n            checked={todo.checked}\n            onCheck={() => dispatch(checkTodo(todo.id))}\n            onEdit={() => dispatch(editTodo(todo.id))}\n            onRemove={() => dispatch(removeTodo(todo.id))}\n          >\n            {todo.value}\n          </Todo>\n        );\n      })}\n  </List>\n);\n\nTodoList.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      isInEditMode: PropTypes.bool,\n      value: PropTypes.string.isRequired\n    })\n  )\n};\n\nTodoList.defaultProps = {\n  todos: []\n};\n\nexport default connect(state => ({\n  todos: getTodos(state)\n}))(TodoList);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\nimport AddTodo from \"../containers/AddTodo\";\nimport TodoList from \"../containers/TodoList\";\n\nconst Screen = styled.div`\n  position: relative;\n  min-height: 100vh;\n`;\n\nconst Container = styled.div`\n  margin: 8px;\n`;\n\nconst StyledAddTodo = styled(AddTodo)`\n  background-color: #ffffff;\n  border-bottom: 1px solid #ececec;\n`;\n\nconst Home = () => (\n  <Screen>\n    <Header />\n    <Container>\n      <StyledAddTodo />\n      <TodoList />\n    </Container>\n    <Footer />\n  </Screen>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer, createMigrate } from \"redux-persist\";\nimport storage from \"redux-persist/es/storage\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport Home from \"./pages/Home\";\n\nimport todos from \"./todo/reducer\";\n\nconst App = () => {\n  const migrations = {\n    1: state => {\n      const byId = {};\n      state.todos.forEach((t, index) => {\n        byId[index] = { ...t, id: index, list: 0 };\n      });\n      return {\n        ...state,\n        todos: {\n          byId,\n          idCounter: state.todos.length\n        }\n      };\n    }\n  };\n  const config = {\n    key: \"todo\",\n    storage,\n    version: 1,\n    migrate: createMigrate(migrations, { debug: false })\n  };\n  const reducer = persistReducer(config, todos);\n  const store = createStore(reducer);\n  const persistor = persistStore(store);\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <Home />\n      </Provider>\n    </PersistGate>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}